/**
 * profile-utils.js
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ API –∑–∞–ø—Ä–æ—Å–∞–º–∏
 */

export class ProfileUtils {
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–∫–µ–Ω–µ –∏–∑ localStorage/sessionStorage/cookie
     * @returns {Object|null} –û–±—ä–µ–∫—Ç —Å —Ç–æ–∫–µ–Ω–æ–º –∏–ª–∏ null
     */
    static getTokenInfo() {
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ localStorage
        let token = localStorage.getItem('authToken');
        if (token) {
            return { token: token, source: 'localStorage' };
        }

        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ sessionStorage
        token = sessionStorage.getItem('authToken');
        if (token) {
            return { token: token, source: 'sessionStorage' };
        }

        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ cookie
        const cookies = document.cookie.split(';');
        for (let cookie of cookies) {
            const [name, value] = cookie.trim().split('=');
            if (name === 'authToken') {
                return { token: value, source: 'cookie' };
            }
        }

        return null;
    }

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π AJAX –∫–ª–∏–µ–Ω—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
     * @param {string} url - URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
     * @param {Object} options - –û–ø—Ü–∏–∏ fetch
     * @returns {Promise} Promise —Å –æ—Ç–≤–µ—Ç–æ–º
     */
    static async makeAuthenticatedRequest(url, options = {}) {
        const tokenInfo = this.getTokenInfo();

        if (!tokenInfo || !tokenInfo.token) {
            throw new Error('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const headers = {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${tokenInfo.token}`,
            'X-Requested-With': 'XMLHttpRequest',
            ...options.headers
        };

        const requestOptions = {
            ...options,
            headers
        };

        console.log(`üöÄ API Request: ${options.method || 'GET'} ${url}`);

        try {
            const response = await fetch(url, requestOptions);

            if (!response.ok) {
                if (response.status === 401) {
                    this.handleUnauthorized();
                    throw new Error('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.');
                }
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            console.log(`‚úÖ API Success: ${url}`, data);
            return data;

        } catch (error) {
            console.error(`‚ùå API Error: ${url}`, error);
            throw error;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
     */
    static handleUnauthorized() {
        console.warn('üîê –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ');

        // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const keys = ['authToken', 'tokenType', 'user', 'rememberMe'];
        keys.forEach(key => {
            localStorage.removeItem(key);
            sessionStorage.removeItem(key);
        });

        // –û—á–∏—â–∞–µ–º cookie
        document.cookie = 'authToken=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
            window.location.href = '/login?error=session_expired';
        }, 1500);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
     * @param {HTMLFormElement} form - –§–æ—Ä–º–∞
     * @returns {Object} –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
     */
    static getFormData(form) {
        const formData = new FormData(form);
        const data = {};

        for (let [key, value] of formData.entries()) {
            data[key] = value;
        }

        return data;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è email
     * @param {string} email - Email –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    static isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
     * @param {string} phone - –¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    static isValidPhone(phone) {
        const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
        return phoneRegex.test(phone.replace(/[\s\-\(\)]/g, ''));
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
     * @param {number} lat - –®–∏—Ä–æ—Ç–∞
     * @param {number} lon - –î–æ–ª–≥–æ—Ç–∞
     * @param {number} precision - –¢–æ—á–Ω–æ—Å—Ç—å (–∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
     * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
     */
    static formatCoordinates(lat, lon, precision = 6) {
        return `${lat.toFixed(precision)}, ${lon.toFixed(precision)}`;
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ loading –∫ –∫–Ω–æ–ø–∫–µ
     * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞
     * @param {string} loadingText - –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
     */
    static setButtonLoading(button, loadingText = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        if (button.dataset.originalContent) return; // –£–∂–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏

        button.dataset.originalContent = button.innerHTML;
        button.disabled = true;
        button.innerHTML = `<i class="fas fa-spinner fa-spin"></i> ${loadingText}`;
    }

    /**
     * –°–Ω—è—Ç–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è loading —Å –∫–Ω–æ–ø–∫–∏
     * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞
     */
    static removeButtonLoading(button) {
        if (!button.dataset.originalContent) return;

        button.disabled = false;
        button.innerHTML = button.dataset.originalContent;
        delete button.dataset.originalContent;
    }

    /**
     * –î–µ–±–∞—É–Ω—Å —Ñ—É–Ω–∫—Ü–∏—è
     * @param {Function} func - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–±–∞—É–Ω—Å–∞
     * @param {number} wait - –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ –º—Å
     * @returns {Function} –î–µ–±–∞—É–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
     */
    static debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
     * @returns {boolean} –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
     */
    static isGeolocationSupported() {
        return 'geolocation' in navigator;
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} action - –î–µ–π—Å—Ç–≤–∏–µ
     * @param {Object} data - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    static logUserAction(action, data = {}) {
        console.log(`üë§ User Action: ${action}`, {
            timestamp: new Date().toISOString(),
            url: window.location.pathname,
            ...data
        });
    }
}