/**
 * üìç profile-location.js - –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π —Å –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å REST API /api/location/* –∏ OpenStreetMap Nominatim
 * –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞ –∏ —Å—Ç—Ä–∞–Ω—ã
 */

// ================================
// üîê –£–¢–ò–õ–ò–¢–´ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
// ================================

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ cookies –∏–ª–∏ localStorage
 */
function getAuthToken() {
    console.log('üîç –ò—â–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ cookies
    const cookies = document.cookie.split(';');
    for (let cookie of cookies) {
        const [name, value] = cookie.trim().split('=');
        if (name === 'authToken') {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω authToken –≤ cookies');
            return value;
        }
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    const tokenFromStorage = localStorage.getItem('authToken');
    if (tokenFromStorage) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω authToken –≤ localStorage');
        return tokenFromStorage;
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
    const tokenFromSession = sessionStorage.getItem('authToken');
    if (tokenFromSession) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω authToken –≤ sessionStorage');
        return tokenFromSession;
    }

    console.warn('‚ö†Ô∏è JWT —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return null;
}

// ================================
// üåê API –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø
// ================================

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ REST API
 */
async function loadCurrentLocation() {
    try {
        console.log('üìç –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ API...');

        const token = getAuthToken();
        const headers = {
            'Content-Type': 'application/json',
        };

        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }

        const response = await fetch('/api/location/me', {
            method: 'GET',
            headers: headers
        });

        const result = await response.json();

        if (result.success && result.data && result.data.hasLocation) {
            console.log('‚úÖ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', result.data);
            updateLocationDisplay(result.data);
            return result.data;
        } else {
            console.log('‚ÑπÔ∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
            return null;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏', 'error');
        return null;
    }
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —á–µ—Ä–µ–∑ REST API —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
async function saveCurrentLocation(lat, lon) {
    try {
        showNotification('–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã...', 'info');

        console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', { lat, lon });

        const token = getAuthToken();
        const headers = {
            'Content-Type': 'application/json',
        };

        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã - —Å–µ—Ä–≤–µ—Ä —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∞–¥—Ä–µ—Å (autoGeocode: true)
        const response = await fetch('/api/location/me', {
            method: 'PUT',
            headers: headers,
            body: JSON.stringify({
                latitude: lat,
                longitude: lon
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', result.data);
            showNotification('–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!', 'success');

            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
            setTimeout(() => {
                window.location.reload();
            }, 2000);

        } else {
            throw new Error(result.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:', error);
        showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
    }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ REST API
 */
async function clearLocation() {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é?')) {
        return;
    }

    try {
        showNotification('–û—á–∏—â–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é...', 'info');

        const token = getAuthToken();
        const headers = {
            'Content-Type': 'application/json',
        };

        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }

        const response = await fetch('/api/location/me', {
            method: 'DELETE',
            headers: headers
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—á–∏—â–µ–Ω–∞');
            showNotification('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—á–∏—â–µ–Ω–∞!', 'success');

            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            setTimeout(() => {
                window.location.reload();
            }, 2000);

        } else {
            throw new Error(result.message || '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
        showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
    }
}

// ================================
// üåç –ë–†–ê–£–ó–ï–†–ù–ê–Ø –ì–ï–û–õ–û–ö–ê–¶–ò–Ø –° –ì–ï–û–ö–û–î–ò–†–û–í–ê–ù–ò–ï–ú
// ================================

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∞–¥—Ä–µ—Å–∞
 */
function getCurrentLocation() {
    const locationDiv = document.getElementById('current-location');

    if (!navigator.geolocation) {
        showNotification('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º', 'error');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    locationDiv.innerHTML = createLoadingLocationHTML();

    console.log('üåç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —É –±—Ä–∞—É–∑–µ—Ä–∞...');

    navigator.geolocation.getCurrentPosition(
        async function(position) {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            const accuracy = position.coords.accuracy;

            console.log('‚úÖ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞:', { lat, lon, accuracy });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
            locationDiv.innerHTML = createGeocodingLocationHTML(lat, lon, accuracy);

            // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
            try {
                const address = await getAddressByCoordinates(lat, lon);
                console.log('üìç –ê–¥—Ä–µ—Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω:', address);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–¥—Ä–µ—Å–æ–º
                locationDiv.innerHTML = createFoundLocationWithAddressHTML(lat, lon, accuracy, address);
            } catch (error) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–¥—Ä–µ—Å:', error);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –∞–¥—Ä–µ—Å–∞
                locationDiv.innerHTML = createFoundLocationHTML(lat, lon, accuracy);
            }
        },
        function(error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);

            let errorMessage = getGeolocationErrorMessage(error);
            locationDiv.innerHTML = createErrorLocationHTML(errorMessage);

            showNotification(errorMessage, 'error');
        },
        {
            enableHighAccuracy: true,
            timeout: 15000,
            maximumAge: 600000 // 10 –º–∏–Ω—É—Ç –∫–µ—à
        }
    );
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —á–µ—Ä–µ–∑ OpenStreetMap Nominatim API
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º
 */
async function getAddressByCoordinates(lat, lon) {
    try {
        console.log('üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º:', lat, lon);

        const response = await fetch(
            `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&zoom=16&addressdetails=1&accept-language=ru`,
            {
                headers: {
                    'User-Agent': 'QuickFood-WebApp/1.0'
                }
            }
        );

        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –≥–µ–æ–∫–æ–¥–∏–Ω–≥—É');
        }

        const data = await response.json();
        console.log('üåç –û—Ç–≤–µ—Ç –æ—Ç Nominatim:', data);

        if (data && data.display_name && data.address) {
            const addr = data.address;

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–æ—Ä–æ–¥ (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞)
            const city = addr.city || addr.town || addr.village || addr.municipality || addr.county;

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω—É
            const country = addr.country;

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∞–¥—Ä–µ—Å –∫–∞–∫ "–ì–æ—Ä–æ–¥, –°—Ç—Ä–∞–Ω–∞"
            let shortAddress = '';
            if (city && country) {
                shortAddress = `${city}, ${country}`;
            } else if (city) {
                shortAddress = city;
            } else if (country) {
                shortAddress = country;
            } else {
                // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –±–µ—Ä–µ–º –∏–∑ display_name
                const parts = data.display_name.split(',');
                shortAddress = parts.slice(0, 2).join(',').trim();
            }

            return {
                full: data.display_name,
                short: shortAddress,
                city: city || '',
                country: country || '',
                street: addr.road || '',
                house_number: addr.house_number || '',
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                formattedCoordinates: `${lat.toFixed(6)}, ${lon.toFixed(6)}`,
                hasLocation: true
            };
        } else {
            throw new Error('–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        throw error;
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
function getGeolocationErrorMessage(error) {
    switch(error.code) {
        case error.PERMISSION_DENIED:
            return '–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.';
        case error.POSITION_UNAVAILABLE:
            return '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
        case error.TIMEOUT:
            return '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
        default:
            return '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.';
    }
}

// ================================
// üé® HTML –ì–ï–ù–ï–†–ê–¢–û–†–´
// ================================

/**
 * HTML –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
 */
function createLoadingLocationHTML() {
    return `
        <div style="text-align: center; padding: 32px; background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 12px; border: 2px dashed #dee2e6;">
            <i class="fas fa-spinner fa-spin" style="font-size: 48px; margin-bottom: 16px; color: #28a745;"></i>
            <div style="font-size: 16px; margin-bottom: 8px; font-weight: 600;">–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ...</div>
            <div style="font-size: 14px; color: #6c757d;">–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</div>
        </div>
    `;
}

/**
 * HTML –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
 */
function createGeocodingLocationHTML(lat, lon, accuracy) {
    return `
        <div style="background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%); padding: 20px; border-radius: 12px; border: 2px solid #ffc107;">
            <div style="font-weight: 600; margin-bottom: 16px; text-align: center;">
                <i class="fas fa-search-location" style="color: #856404; margin-right: 8px;"></i>
                –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞...
            </div>
            
            <!-- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç -->
            <div style="background: rgba(255,255,255,0.8); padding: 16px; border-radius: 8px; margin-bottom: 16px; text-align: center;">
                <div style="font-size: 16px; font-weight: 600; margin-bottom: 8px; color: #856404;">
                    üìç ${lat.toFixed(6)}, ${lon.toFixed(6)}
                </div>
                <div style="font-size: 14px; color: #666;">
                    üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ~${Math.round(accuracy)} –º–µ—Ç—Ä–æ–≤
                </div>
            </div>
            
            <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ -->
            <div style="text-align: center; padding: 20px;">
                <i class="fas fa-spinner fa-spin" style="font-size: 24px; margin-bottom: 12px; color: #856404;"></i>
                <div style="font-size: 14px; color: #856404;">–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏...</div>
            </div>
        </div>
    `;
}

/**
 * HTML –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –° –ê–î–†–ï–°–û–ú
 */
function createFoundLocationWithAddressHTML(lat, lon, accuracy, address) {
    return `
        <div style="background: linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%); padding: 20px; border-radius: 12px; border: 2px solid #28a745;">
            <div style="font-weight: 600; margin-bottom: 16px; text-align: center;">
                <i class="fas fa-map-marker-alt" style="color: #28a745; margin-right: 8px;"></i>
                –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ!
            </div>
            
            <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–µ -->
            <div style="background: rgba(255,255,255,0.9); padding: 20px; border-radius: 12px; margin-bottom: 20px; border: 2px solid #28a745;">
                <div style="text-align: center; margin-bottom: 16px;">
                    <i class="fas fa-location-arrow" style="font-size: 48px; margin-bottom: 12px; color: #28a745;"></i>
                </div>
                
                <!-- –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ -->
                <div style="text-align: center; margin-bottom: 16px; padding: 12px; background: rgba(40, 167, 69, 0.1); border-radius: 8px;">
                    <div style="font-size: 20px; font-weight: 700; color: #155724; margin-bottom: 4px;">
                        üè† ${address.short}
                    </div>
                    ${address.city ? `<div style="font-size: 14px; color: #666; margin-bottom: 2px;">–ì–æ—Ä–æ–¥: ${address.city}</div>` : ''}
                    ${address.country ? `<div style="font-size: 14px; color: #666; margin-bottom: 2px;">–°—Ç—Ä–∞–Ω–∞: ${address.country}</div>` : ''}
                    ${address.full !== address.short ? `<div style="font-size: 11px; color: #999; margin-top: 8px; font-style: italic;">–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å: ${address.full}</div>` : ''}
                </div>
                
                <!-- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã -->
                <div style="text-align: center; margin-bottom: 12px;">
                    <div style="font-size: 16px; font-weight: 600; color: #155724; margin-bottom: 4px;">
                        üìç ${lat.toFixed(6)}, ${lon.toFixed(6)}
                    </div>
                    <div style="font-size: 14px; color: #666;">
                        üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ~${Math.round(accuracy)} –º–µ—Ç—Ä–æ–≤
                    </div>
                </div>
                
                <div style="text-align: center;">
                    <div style="font-size: 14px; color: #28a745; font-weight: 500;">
                        ‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
                    </div>
                </div>
            </div>
            
            <div style="display: flex; gap: 12px; flex-wrap: wrap;">
                <button class="btn btn-primary" onclick="saveCurrentLocation(${lat}, ${lon})" 
                        style="flex: 1; min-width: 140px; background: #28a745; color: white; padding: 16px; border: none; border-radius: 8px; cursor: pointer; font-size: 16px; font-weight: 600;">
                    <i class="fas fa-save" style="margin-right: 8px;"></i>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
                </button>
                <button class="btn btn-secondary" onclick="getCurrentLocation()" 
                        style="flex: 0 0 auto; background: #6c757d; color: white; padding: 16px; border: none; border-radius: 8px; cursor: pointer;">
                    <i class="fas fa-redo"></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
    `;
}

/**
 * HTML –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–ø—Ä–æ—Å—Ç–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ –∞–¥—Ä–µ—Å–∞ - fallback)
 */
function createFoundLocationHTML(lat, lon, accuracy) {
    return `
        <div style="background: linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%); padding: 20px; border-radius: 12px; border: 2px solid #28a745;">
            <div style="font-weight: 600; margin-bottom: 16px; text-align: center;">
                <i class="fas fa-map-marker-alt" style="color: #28a745; margin-right: 8px;"></i>
                –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ!
            </div>
            
            <!-- –ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç -->
            <div style="background: rgba(255,255,255,0.8); padding: 24px; border-radius: 12px; margin-bottom: 20px; text-align: center; border: 2px solid #28a745;">
                <i class="fas fa-location-arrow" style="font-size: 48px; margin-bottom: 16px; color: #28a745;"></i>
                <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px; color: #155724;">
                    üìç ${lat.toFixed(6)}, ${lon.toFixed(6)}
                </div>
                <div style="font-size: 16px; margin-bottom: 12px; color: #666;">
                    üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ~${Math.round(accuracy)} –º–µ—Ç—Ä–æ–≤
                </div>
                <div style="font-size: 12px; color: #856404; font-style: italic;">
                    ‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
                </div>
                <div style="font-size: 14px; color: #28a745; font-weight: 500; margin-top: 8px;">
                    ‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
                </div>
            </div>
            
            <div style="display: flex; gap: 12px; flex-wrap: wrap;">
                <button class="btn btn-primary" onclick="saveCurrentLocation(${lat}, ${lon})" 
                        style="flex: 1; min-width: 140px; background: #28a745; color: white; padding: 16px; border: none; border-radius: 8px; cursor: pointer; font-size: 16px; font-weight: 600;">
                    <i class="fas fa-save" style="margin-right: 8px;"></i>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
                </button>
                <button class="btn btn-secondary" onclick="getCurrentLocation()" 
                        style="flex: 0 0 auto; background: #6c757d; color: white; padding: 16px; border: none; border-radius: 8px; cursor: pointer;">
                    <i class="fas fa-redo"></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>
        </div>
    `;
}

/**
 * HTML –¥–ª—è –æ—à–∏–±–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
function createErrorLocationHTML(errorMessage) {
    return `
        <div style="text-align: center; padding: 32px; background: linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%); border-radius: 12px; border: 2px solid #fc8181;">
            <i class="fas fa-exclamation-triangle" style="font-size: 48px; margin-bottom: 16px; color: #e53e3e;"></i>
            <div style="margin-bottom: 16px; font-size: 16px; font-weight: 600; color: #742a2a;">${errorMessage}</div>
            <div style="display: flex; gap: 12px; justify-content: center; flex-wrap: wrap;">
                <button class="btn btn-secondary" onclick="getCurrentLocation()" style="background: #6c757d; color: white; padding: 12px; border: none; border-radius: 8px; cursor: pointer;">
                    <i class="fas fa-redo"></i> –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
                <button class="btn btn-outline" onclick="addAddressManually()" style="background: transparent; border: 2px solid #28a745; color: #28a745; padding: 12px; border-radius: 8px; cursor: pointer;">
                    <i class="fas fa-edit"></i> –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é
                </button>
            </div>
        </div>
    `;
}

// ================================
// üñºÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï–ú
// ================================

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
function updateLocationDisplay(locationData) {
    console.log('üé® –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', locationData);

    if (locationData.hasLocation) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        const savedLocationDiv = document.querySelector('.saved-location');
        if (savedLocationDiv) {
            savedLocationDiv.style.display = 'block';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        const getCurrentBtn = document.querySelector('button[onclick="getCurrentLocation()"]');
        if (getCurrentBtn && !getCurrentBtn.closest('.saved-location')) {
            getCurrentBtn.innerHTML = '<i class="fas fa-crosshairs" style="margin-right: 8px;"></i>–û–±–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ';
        }
    } else {
        // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        const savedLocationDiv = document.querySelector('.saved-location');
        if (savedLocationDiv) {
            savedLocationDiv.style.display = 'none';
        }
    }
}

// ================================
// üìù –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–†–ï–°–ê–ú–ò
// ================================

/**
 * –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞
 */
function addAddressManually() {
    const street = prompt('–í–≤–µ–¥–∏—Ç–µ —É–ª–∏—Ü—É –∏ –Ω–æ–º–µ—Ä –¥–æ–º–∞:');
    if (!street || !street.trim()) return;

    const city = prompt('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥:');
    if (!city || !city.trim()) return;

    const country = prompt('–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:') || '–†–æ—Å—Å–∏—è';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ REST API
    saveAddressLocation(street.trim(), city.trim(), country.trim());
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ REST API
 */
async function saveAddressLocation(street, city, country) {
    try {
        showNotification('–°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å...', 'info');

        console.log('üè† –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å:', { street, city, country });

        const response = await fetch('/api/location/address', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                street: street,
                city: city,
                country: country
            })
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ –ê–¥—Ä–µ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', result.data);
            showNotification('–ê–¥—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!', 'success');

            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
            setTimeout(() => {
                window.location.reload();
            }, 2000);

        } else {
            throw new Error(result.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞:', error);
        showNotification('–û—à–∏–±–∫–∞: ' + error.message, 'error');
    }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ (–∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è)
 */
function addAddress() {
    addAddressManually();
}

// ================================
// üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
function initializeLocationModule() {
    console.log('üìç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ (—Å –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º)...');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadCurrentLocation();

    console.log('‚úÖ –ú–æ–¥—É–ª—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// ================================
// üåê –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
// ================================

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è onclick handlers
window.getCurrentLocation = getCurrentLocation;
window.saveCurrentLocation = saveCurrentLocation;
window.clearLocation = clearLocation;
window.addAddress = addAddress;
window.addAddressManually = addAddressManually;
window.loadCurrentLocation = loadCurrentLocation;
window.getAddressByCoordinates = getAddressByCoordinates;

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', initializeLocationModule);