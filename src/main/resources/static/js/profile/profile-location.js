// /**
//  * profile-location.js
//  * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//  */
//
// import { ProfileUtils } from './profile-utils.js';
// import { ProfileNotifications } from './profile-notifications.js';
//
// export class ProfileLocation {
//     static currentLocationDiv = null;
//     static isGettingLocation = false;
//
//     /**
//      * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//      */
//     static init() {
//         this.currentLocationDiv = document.getElementById('current-location');
//         console.log('üìç ProfileLocation module initialized');
//     }
//
//     /**
//      * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//      */
//     static getCurrentLocation() {
//         if (this.isGettingLocation) {
//             ProfileNotifications.warning('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...');
//             return;
//         }
//
//         if (!ProfileUtils.isGeolocationSupported()) {
//             ProfileNotifications.error('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
//             return;
//         }
//
//         ProfileUtils.logUserAction('geolocation_request');
//         this.isGettingLocation = true;
//         this.showLoadingState();
//
//         const options = {
//             enableHighAccuracy: true,
//             timeout: 15000,
//             maximumAge: 300000 // 5 –º–∏–Ω—É—Ç
//         };
//
//         navigator.geolocation.getCurrentPosition(
//             (position) => this.onLocationSuccess(position),
//             (error) => this.onLocationError(error),
//             options
//         );
//     }
//
//     /**
//      * –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//      * @param {GeolocationPosition} position - –ü–æ–∑–∏—Ü–∏—è
//      */
//     static onLocationSuccess(position) {
//         this.isGettingLocation = false;
//
//         const lat = position.coords.latitude;
//         const lon = position.coords.longitude;
//         const accuracy = position.coords.accuracy;
//
//         console.log('üìç Location found:', { lat, lon, accuracy });
//         ProfileUtils.logUserAction('geolocation_success', { lat, lon, accuracy });
//
//         this.showLocationFound(lat, lon, accuracy);
//         ProfileNotifications.success('–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
//     }
//
//     /**
//      * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//      * @param {GeolocationPositionError} error - –û—à–∏–±–∫–∞
//      */
//     static onLocationError(error) {
//         this.isGettingLocation = false;
//
//         let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ';
//         let userMessage = '';
//
//         switch(error.code) {
//             case error.PERMISSION_DENIED:
//                 errorMessage = '–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω';
//                 userMessage = '–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞';
//                 break;
//             case error.POSITION_UNAVAILABLE:
//                 errorMessage = '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
//                 userMessage = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É';
//                 break;
//             case error.TIMEOUT:
//                 errorMessage = '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ';
//                 userMessage = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏';
//                 break;
//         }
//
//         console.error('üìç Geolocation error:', error);
//         ProfileUtils.logUserAction('geolocation_error', {
//             code: error.code,
//             message: error.message
//         });
//
//         this.showLocationError(errorMessage, userMessage);
//         ProfileNotifications.error(errorMessage);
//     }
//
//     /**
//      * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
//      */
//     static showLoadingState() {
//         if (!this.currentLocationDiv) return;
//
//         this.currentLocationDiv.innerHTML = `
//             <div style="text-align: center; padding: 24px;">
//                 <i class="fas fa-spinner fa-spin" style="font-size: 48px; margin-bottom: 16px; color: var(--primary-green);"></i>
//                 <div style="font-weight: 600; margin-bottom: 8px;">–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ...</div>
//                 <div style="font-size: 14px; color: var(--text-gray);">–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</div>
//                 <button class="btn btn-secondary" onclick="ProfileLocation.cancelLocationRequest()" style="margin-top: 16px;">
//                     <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∏—Ç—å
//                 </button>
//             </div>
//         `;
//     }
//
//     /**
//      * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
//      * @param {number} lat - –®–∏—Ä–æ—Ç–∞
//      * @param {number} lon - –î–æ–ª–≥–æ—Ç–∞
//      * @param {number} accuracy - –¢–æ—á–Ω–æ—Å—Ç—å –≤ –º–µ—Ç—Ä–∞—Ö
//      */
//     static showLocationFound(lat, lon, accuracy) {
//         if (!this.currentLocationDiv) return;
//
//         const coordinates = ProfileUtils.formatCoordinates(lat, lon);
//         const accuracyText = accuracy < 100 ? '–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å' :
//             accuracy < 1000 ? '–°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å' : '–ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å';
//
//         this.currentLocationDiv.innerHTML = `
//             <div style="text-align: left; width: 100%; padding: 20px; background: var(--accent-green); border-radius: var(--border-radius);">
//                 <div style="font-weight: 600; margin-bottom: 12px; color: var(--primary-green);">
//                     <i class="fas fa-map-marker-alt" style="margin-right: 8px;"></i>
//                     –¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ
//                 </div>
//                 <div style="font-size: 14px; color: var(--text-gray); margin-bottom: 8px;">
//                     <strong>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong> ${coordinates}
//                 </div>
//                 <div style="font-size: 14px; color: var(--text-gray); margin-bottom: 16px;">
//                     <strong>–¢–æ—á–Ω–æ—Å—Ç—å:</strong> ${accuracyText} (¬±${Math.round(accuracy)}–º)
//                 </div>
//                 <div style="display: flex; gap: 8px; flex-wrap: wrap;">
//                     <button class="btn btn-primary" onclick="ProfileLocation.saveCurrentLocation(${lat}, ${lon})">
//                         <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
//                     </button>
//                     <button class="btn btn-secondary" onclick="ProfileLocation.getCurrentLocation()">
//                         <i class="fas fa-redo"></i> –û–±–Ω–æ–≤–∏—Ç—å
//                     </button>
//                     <button class="btn btn-secondary" onclick="ProfileLocation.showOnMap(${lat}, ${lon})">
//                         <i class="fas fa-map"></i> –ù–∞ –∫–∞—Ä—Ç–µ
//                     </button>
//                 </div>
//             </div>
//         `;
//     }
//
//     /**
//      * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//      * @param {string} errorMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
//      * @param {string} userMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//      */
//     static showLocationError(errorMessage, userMessage) {
//         if (!this.currentLocationDiv) return;
//
//         this.currentLocationDiv.innerHTML = `
//             <div style="text-align: center; padding: 24px;">
//                 <i class="fas fa-exclamation-triangle" style="font-size: 48px; margin-bottom: 16px; color: var(--warning-orange);"></i>
//                 <div style="font-weight: 600; margin-bottom: 8px; color: var(--danger-red);">${errorMessage}</div>
//                 <div style="font-size: 14px; color: var(--text-gray); margin-bottom: 16px;">${userMessage}</div>
//                 <div style="display: flex; gap: 8px; justify-content: center; flex-wrap: wrap;">
//                     <button class="btn btn-primary" onclick="ProfileLocation.getCurrentLocation()">
//                         <i class="fas fa-redo"></i> –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
//                     </button>
//                     <button class="btn btn-secondary" onclick="ProfileLocation.showManualInput()">
//                         <i class="fas fa-keyboard"></i> –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é
//                     </button>
//                 </div>
//             </div>
//         `;
//     }
//
//     /**
//      * –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//      */
//     static cancelLocationRequest() {
//         this.isGettingLocation = false;
//         ProfileNotifications.info('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ');
//
//         if (!this.currentLocationDiv) return;
//
//         this.currentLocationDiv.innerHTML = `
//             <div style="text-align: center; padding: 24px;">
//                 <i class="fas fa-map-marked-alt" style="font-size