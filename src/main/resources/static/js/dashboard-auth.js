// //
// // ‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è SSR –¥–∞—à–±–æ—Ä–¥–∞
// class SimpleDashboardAuth {
//     constructor() {
//         this.API_BASE_URL = 'http://localhost:8082';
//         this.init();
//     }
//
//     init() {
//         console.log('üîí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞');
//         this.checkAuthentication();
//     }
//
//     // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ storage
//     getAuthToken() {
//         try {
//             let token = localStorage.getItem('authToken');
//             if (token) return token;
//
//             token = sessionStorage.getItem('authToken');
//             return token;
//         } catch (error) {
//             console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
//             return null;
//         }
//     }
//
//     // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ storage
//     getUserData() {
//         try {
//             let userData = localStorage.getItem('user');
//             if (userData) return JSON.parse(userData);
//
//             userData = sessionStorage.getItem('user');
//             return userData ? JSON.parse(userData) : null;
//         } catch (error) {
//             console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
//             return null;
//         }
//     }
//
//     // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ Authorization header
//     getAuthHeader() {
//         const token = this.getAuthToken();
//         const tokenType = localStorage.getItem('tokenType') || sessionStorage.getItem('tokenType') || 'Bearer';
//         return token ? `${tokenType} ${token}` : null;
//     }
//
//     // ‚úÖ –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
//     async checkAuthentication() {
//         console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
//
//         const token = this.getAuthToken();
//         const userData = this.getUserData();
//
//         if (!token || !userData) {
//             console.log('‚ùå –¢–æ–∫–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
//             this.redirectToLogin();
//             return;
//         }
//
//         console.log(`üîë –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email} (${userData.userRole})`);
//
//         // ‚úÖ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ API
//         try {
//             const authHeader = this.getAuthHeader();
//
//             const response = await fetch(`${this.API_BASE_URL}/api/auth/validate-token`, {
//                 method: 'POST',
//                 headers: {
//                     'Authorization': authHeader,
//                     'Content-Type': 'application/json'
//                 }
//             });
//
//             if (response.ok) {
//                 const result = await response.json();
//                 if (result.valid) {
//                     console.log('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥');
//                     this.showDashboard(userData);
//                 } else {
//                     console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
//                     this.redirectToLogin();
//                 }
//             } else {
//                 console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', response.status);
//                 this.redirectToLogin();
//             }
//
//         } catch (error) {
//             console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
//             this.redirectToLogin();
//         }
//     }
//
//     // ‚úÖ –ü–æ–∫–∞–∑ –¥–∞—à–±–æ—Ä–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//     showDashboard(userData) {
//         console.log(`üë§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –¥–ª—è —Ä–æ–ª–∏: ${userData.userRole}`);
//
//         // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ header
//         this.updateUserInfo(userData);
//
//         // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//         this.showRoleContent(userData.userRole);
//
//         console.log('‚úÖ –î–∞—à–±–æ—Ä–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω');
//     }
//
//     // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ header
//     updateUserInfo(userData) {
//         const userNameElement = document.getElementById('user-name');
//         const userRoleElement = document.getElementById('user-role');
//
//         if (userNameElement) {
//             userNameElement.textContent = `${userData.firstName} ${userData.lastName}`;
//         }
//
//         if (userRoleElement) {
//             // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
//             const roleNames = {
//                 'BASE_USER': '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å',
//                 'BUSINESS_USER': '–í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞',
//                 'COURIER': '–ö—É—Ä—å–µ—Ä',
//                 'ADMIN': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
//             };
//             userRoleElement.textContent = roleNames[userData.userRole] || userData.userRole;
//         }
//     }
//
//     // ‚úÖ –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ä–æ–ª–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
//     showRoleContent(userRole) {
//         const container = document.getElementById('dashboard-content');
//
//         if (!container) {
//             console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–∞—à–±–æ—Ä–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
//             return;
//         }
//
//         // ‚úÖ –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–æ–ª–∏ –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
//         const templateId = this.getTemplateId(userRole);
//
//         // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—â–µ–º —à–∞–±–ª–æ–Ω –≤–Ω—É—Ç—Ä–∏ dashboard-templates
//         const templatesContainer = document.getElementById('dashboard-templates');
//         if (!templatesContainer) {
//             console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
//             this.showError('–®–∞–±–ª–æ–Ω—ã –¥–∞—à–±–æ—Ä–¥–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
//             return;
//         }
//
//         const template = templatesContainer.querySelector(`#${templateId}`);
//
//         if (!template) {
//             console.error('‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ä–æ–ª–∏:', userRole, 'templateId:', templateId);
//             console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:', templatesContainer.children);
//             this.showError('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
//             return;
//         }
//
//         console.log('‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω:', templateId);
//
//         // ‚úÖ –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω
//         const content = template.cloneNode(true);
//         content.style.display = 'block';
//         content.id = 'active-dashboard';
//
//         // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ä–æ–ª–∏
//         const roleSections = content.querySelectorAll(`[data-role="${userRole}"]`);
//         console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ —Å–µ–∫—Ü–∏–π –¥–ª—è —Ä–æ–ª–∏ ${userRole}:`, roleSections.length);
//
//         roleSections.forEach(section => {
//             section.classList.add('visible');
//             section.style.display = 'block';
//         });
//
//         // ‚úÖ –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π
//         const allSections = content.querySelectorAll('.role-section');
//         allSections.forEach(section => {
//             if (!section.dataset.role || section.dataset.role !== userRole) {
//                 section.style.display = 'none';
//             }
//         });
//
//         // ‚úÖ –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
//         container.innerHTML = '';
//         container.appendChild(content);
//
//         console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ä–æ–ª–∏: ${userRole}`);
//     }
//
//     // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ ID —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ä–æ–ª–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
//     getTemplateId(userRole) {
//         const templateMap = {
//             'BASE_USER': 'base-user-content',
//             'BUSINESS_USER': 'business-user-content',
//             'COURIER': 'courier-content',
//             'ADMIN': 'admin-content'
//         };
//
//         return templateMap[userRole] || 'base-user-content';
//     }
//
//     // ‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
//     redirectToLogin() {
//         console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
//         window.location.href = '/login?error=unauthorized';
//     }
//
//     // ‚úÖ –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
//     showError(message) {
//         const container = document.getElementById('dashboard-content');
//         if (container) {
//             container.innerHTML = `
//                 <div class="error-message">
//                     <div style="font-size: 64px; margin-bottom: 20px;">üòû</div>
//                     <h2>–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
//                     <p>${message}</p>
//                     <div class="error-actions">
//                         <a href="/login" class="btn btn-primary">
//                             <i class="fas fa-home"></i> –ù–∞ –≥–ª–∞–≤–Ω—É—é
//                         </a>
//                         <button class="btn btn-secondary" onclick="window.location.reload()">
//                             <i class="fas fa-redo"></i> –û–±–Ω–æ–≤–∏—Ç—å
//                         </button>
//                     </div>
//                 </div>
//             `;
//         }
//     }
//
//     // ‚úÖ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–ª—è logout)
//     clearAuthData() {
//         const keys = ['authToken', 'tokenType', 'user', 'rememberMe', 'lastRememberMe'];
//         keys.forEach(key => {
//             localStorage.removeItem(key);
//             sessionStorage.removeItem(key);
//         });
//         console.log('üßπ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω—ã');
//     }
// }
//
// // ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// document.addEventListener('DOMContentLoaded', function() {
//     window.simpleDashboardAuth = new SimpleDashboardAuth();
// });
//
// // ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è logout (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ HTML)
// async function logout() {
//     try {
//         console.log('üö™ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ dashboard API...');
//
//         // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
//         if (window.simpleDashboardAuth) {
//             window.simpleDashboardAuth.clearAuthData();
//         }
//
//         // –í—ã–∑—ã–≤–∞–µ–º API logout
//         const response = await fetch('/dashboard/logout', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json'
//             }
//         });
//
//         if (response.ok) {
//             const result = await response.json();
//             console.log('‚úÖ Logout —É—Å–ø–µ—à–µ–Ω:', result.message);
//         }
//     } catch (error) {
//         console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ logout:', error);
//     } finally {
//         // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ login
//         window.location.href = '/login';
//     }
// }
//
// // ‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤ HTML)
// window.dashboardAuth = {
//     refresh: function() {
//         console.log('üîÑ –í—ã–∑–≤–∞–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ dashboardAuth.refresh() - –∏—Å–ø–æ–ª—å–∑—É–µ–º window.location.reload()');
//         window.location.reload();
//     },
//     logout: logout,
//     checkAuth: function() {
//         if (window.simpleDashboardAuth) {
//             return window.simpleDashboardAuth.checkAuthentication();
//         }
//     }
// };

// ‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è SSR –¥–∞—à–±–æ—Ä–¥–∞
class SimpleDashboardAuth {
    constructor() {
        this.API_BASE_URL = 'http://localhost:8082';
        this.init();
    }

    init() {
        console.log('üîí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞');
        this.checkAuthentication();
    }

    // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ storage
    getAuthToken() {
        try {
            let token = localStorage.getItem('authToken');
            if (token) return token;

            token = sessionStorage.getItem('authToken');
            return token;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
            return null;
        }
    }

    // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ storage
    getUserData() {
        try {
            let userData = localStorage.getItem('user');
            if (userData) return JSON.parse(userData);

            userData = sessionStorage.getItem('user');
            return userData ? JSON.parse(userData) : null;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return null;
        }
    }

    // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ Authorization header
    getAuthHeader() {
        const token = this.getAuthToken();
        const tokenType = localStorage.getItem('tokenType') || sessionStorage.getItem('tokenType') || 'Bearer';
        return token ? `${tokenType} ${token}` : null;
    }

    // ‚úÖ –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async checkAuthentication() {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

        const token = this.getAuthToken();
        const userData = this.getUserData();

        if (!token || !userData) {
            console.log('‚ùå –¢–æ–∫–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            this.redirectToLogin();
            return;
        }

        console.log(`üîë –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email} (${userData.userRole})`);

        // ‚úÖ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ API
        try {
            const authHeader = this.getAuthHeader();

            const response = await fetch(`${this.API_BASE_URL}/api/auth/validate-token`, {
                method: 'POST',
                headers: {
                    'Authorization': authHeader,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const result = await response.json();
                if (result.valid) {
                    console.log('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥');

                    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ cookie –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
                    document.cookie = `authToken=${token}; path=/; SameSite=Lax; secure=${location.protocol === 'https:'}`;
                    console.log('üç™ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ cookie –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');

                    this.showDashboard(userData);
                } else {
                    console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
                    this.redirectToLogin();
                }
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', response.status);
                this.redirectToLogin();
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
            this.redirectToLogin();
        }
    }

    // ‚úÖ –ü–æ–∫–∞–∑ –¥–∞—à–±–æ—Ä–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    showDashboard(userData) {
        console.log(`üë§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –¥–ª—è —Ä–æ–ª–∏: ${userData.userRole}`);

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ header
        this.updateUserInfo(userData);

        // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.showRoleContent(userData.userRole);

        console.log('‚úÖ –î–∞—à–±–æ—Ä–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω');
    }

    // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ header
    updateUserInfo(userData) {
        const userNameElement = document.getElementById('user-name');
        const userRoleElement = document.getElementById('user-role');

        if (userNameElement) {
            userNameElement.textContent = `${userData.firstName} ${userData.lastName}`;
        }

        if (userRoleElement) {
            // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
            const roleNames = {
                'BASE_USER': '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å',
                'BUSINESS_USER': '–í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞',
                'COURIER': '–ö—É—Ä—å–µ—Ä',
                'ADMIN': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            };
            userRoleElement.textContent = roleNames[userData.userRole] || userData.userRole;
        }
    }

    // ‚úÖ –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ä–æ–ª–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
    showRoleContent(userRole) {
        const container = document.getElementById('dashboard-content');

        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–∞—à–±–æ—Ä–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–æ–ª–∏ –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        const templateId = this.getTemplateId(userRole);

        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—â–µ–º —à–∞–±–ª–æ–Ω –≤–Ω—É—Ç—Ä–∏ dashboard-templates
        const templatesContainer = document.getElementById('dashboard-templates');
        if (!templatesContainer) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            this.showError('–®–∞–±–ª–æ–Ω—ã –¥–∞—à–±–æ—Ä–¥–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            return;
        }

        const template = templatesContainer.querySelector(`#${templateId}`);

        if (!template) {
            console.error('‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ä–æ–ª–∏:', userRole, 'templateId:', templateId);
            console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:', templatesContainer.children);
            this.showError('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return;
        }

        console.log('‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω:', templateId);

        // ‚úÖ –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω
        const content = template.cloneNode(true);
        content.style.display = 'block';
        content.id = 'active-dashboard';

        // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ä–æ–ª–∏
        const roleSections = content.querySelectorAll(`[data-role="${userRole}"]`);
        console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ —Å–µ–∫—Ü–∏–π –¥–ª—è —Ä–æ–ª–∏ ${userRole}:`, roleSections.length);

        roleSections.forEach(section => {
            section.classList.add('visible');
            section.style.display = 'block';
        });

        // ‚úÖ –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π
        const allSections = content.querySelectorAll('.role-section');
        allSections.forEach(section => {
            if (!section.dataset.role || section.dataset.role !== userRole) {
                section.style.display = 'none';
            }
        });

        // ‚úÖ –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        container.innerHTML = '';
        container.appendChild(content);

        console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ä–æ–ª–∏: ${userRole}`);
    }

    // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ ID —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ä–æ–ª–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
    getTemplateId(userRole) {
        const templateMap = {
            'BASE_USER': 'base-user-content',
            'BUSINESS_USER': 'business-user-content',
            'COURIER': 'courier-content',
            'ADMIN': 'admin-content'
        };

        return templateMap[userRole] || 'base-user-content';
    }

    // ‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    redirectToLogin() {
        console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
        window.location.href = '/login?error=unauthorized';
    }

    // ‚úÖ –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
    showError(message) {
        const container = document.getElementById('dashboard-content');
        if (container) {
            container.innerHTML = `
                <div class="error-message">
                    <div style="font-size: 64px; margin-bottom: 20px;">üòû</div>
                    <h2>–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
                    <p>${message}</p>
                    <div class="error-actions">
                        <a href="/login" class="btn btn-primary">
                            <i class="fas fa-home"></i> –ù–∞ –≥–ª–∞–≤–Ω—É—é
                        </a>
                        <button class="btn btn-secondary" onclick="window.location.reload()">
                            <i class="fas fa-redo"></i> –û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
            `;
        }
    }

    // ‚úÖ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–ª—è logout)
    clearAuthData() {
        const keys = ['authToken', 'tokenType', 'user', 'rememberMe', 'lastRememberMe'];
        keys.forEach(key => {
            localStorage.removeItem(key);
            sessionStorage.removeItem(key);
        });
        console.log('üßπ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω—ã');
    }
}

// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    window.simpleDashboardAuth = new SimpleDashboardAuth();
});

// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è logout (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ HTML)
async function logout() {
    try {
        console.log('üö™ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ dashboard API...');

        // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (window.simpleDashboardAuth) {
            window.simpleDashboardAuth.clearAuthData();
        }

        // –í—ã–∑—ã–≤–∞–µ–º API logout
        const response = await fetch('/dashboard/logout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const result = await response.json();
            console.log('‚úÖ Logout —É—Å–ø–µ—à–µ–Ω:', result.message);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ logout:', error);
    } finally {
        // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ login
        window.location.href = '/login';
    }
}

// ‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤ HTML)
window.dashboardAuth = {
    refresh: function() {
        console.log('üîÑ –í—ã–∑–≤–∞–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ dashboardAuth.refresh() - –∏—Å–ø–æ–ª—å–∑—É–µ–º window.location.reload()');
        window.location.reload();
    },
    logout: logout,
    checkAuth: function() {
        if (window.simpleDashboardAuth) {
            return window.simpleDashboardAuth.checkAuthentication();
        }
    }
};