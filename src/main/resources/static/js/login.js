
// js/login.js
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Login page loaded');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    checkExistingAuth();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    initLoginForm();
});

// üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
async function checkExistingAuth() {
    const token = localStorage.getItem('authToken') || sessionStorage.getItem('authToken');
    const userData = apiClient.getUserData();

    if (token && userData) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
            const response = await apiClient.validateToken();

            if (response.valid) {
                console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ —Å–µ—Å—Å–∏–∏
                const rememberMeActive = apiClient.isRememberMeActive();
                console.log(`üç™ Remember Me: ${rememberMeActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);

                showUserProfile(userData, rememberMeActive);
                return;
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ');
        }

        // –û—á–∏—â–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        apiClient.clearTokens();
    }
}

// üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
function initLoginForm() {
    const form = document.getElementById('loginForm');
    form.addEventListener('submit', handleLogin);

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ checkbox –∏–∑ localStorage
    const rememberMeCheckbox = document.getElementById('rememberMe');
    const lastRememberMe = localStorage.getItem('lastRememberMe');
    if (lastRememberMe === 'true') {
        rememberMeCheckbox.checked = true;
    }
}

// üîê –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
async function handleLogin(event) {
    event.preventDefault();

    MessageManager.clear();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = new FormData(event.target);
    const credentials = {
        email: formData.get('email').trim(),
        password: formData.get('password'),
        rememberMe: formData.get('rememberMe') === 'on' // üç™ –ß–∏—Ç–∞–µ–º checkbox
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä Remember Me –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–∞
    localStorage.setItem('lastRememberMe', credentials.rememberMe);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!validateLoginData(credentials)) {
        return;
    }

    try {
        UIUtils.showLoading('loginBtn');

        console.log(`üîê –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${credentials.email} (Remember Me: ${credentials.rememberMe})`);

        const response = await apiClient.login(credentials);

        if (response.success) {
            const welcomeMessage = credentials.rememberMe ?
                `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${response.user.firstName}! (–í—ã –±—É–¥–µ—Ç–µ –∑–∞–ø–æ–º–Ω–µ–Ω—ã –Ω–∞ 7 –¥–Ω–µ–π)` :
                `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${response.user.firstName}!`;

            MessageManager.success(welcomeMessage);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            showUserProfile(response.user, credentials.rememberMe);

            // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
            document.getElementById('loginForm').style.display = 'none';

        } else {
            MessageManager.error(response.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        MessageManager.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + error.message);

    } finally {
        UIUtils.hideLoading('loginBtn', 'üîê –í–æ–π—Ç–∏');
    }
}

// üë§ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function showUserProfile(user, rememberMeActive = false) {
    const profileDiv = document.getElementById('userProfile');
    const userInfoDiv = document.getElementById('userInfo');

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    userInfoDiv.innerHTML = `
        <div class="user-info-item">
            <span class="user-info-label">ID:</span>
            <span class="user-info-value">${user.id}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">–ò–º—è:</span>
            <span class="user-info-value">${user.firstName} ${user.lastName}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">Email:</span>
            <span class="user-info-value">${user.email}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">–†–æ–ª—å:</span>
            <span class="user-info-value">${user.roleDisplayName}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">–¢–∏–ø —Å–µ—Å—Å–∏–∏:</span>
            <span class="user-info-value">${rememberMeActive ? 'üç™ –î–æ–ª–≥–∞—è (7 –¥–Ω–µ–π)' : 'üîí –û–±—ã—á–Ω–∞—è (–¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞)'}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</span>
            <span class="user-info-value">${UIUtils.formatDate(user.createdAt)}</span>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
            <span class="user-info-value">${UIUtils.formatDate(user.updatedAt)}</span>
        </div>
    `;

    profileDiv.style.display = 'block';
}

// üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function refreshProfile() {
    try {
        MessageManager.info('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...');

        const response = await apiClient.getProfile();

        if (response.success) {
            const rememberMeActive = apiClient.isRememberMeActive();
            showUserProfile(response.user, rememberMeActive);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            apiClient.setUserData(response.user, rememberMeActive);

            MessageManager.success('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω');
        } else {
            MessageManager.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
        MessageManager.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message);
    }
}

// üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
async function logout() {
    const rememberMeActive = apiClient.isRememberMeActive();
    const confirmMessage = rememberMeActive ?
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏? (Remember Me –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω)' :
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?';

    if (!confirm(confirmMessage)) {
        return;
    }

    try {
        await apiClient.logout();

        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        document.getElementById('userProfile').style.display = 'none';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
        const loginForm = document.getElementById('loginForm');
        loginForm.style.display = 'block';

        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        loginForm.reset();

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä Remember Me
        const lastRememberMe = localStorage.getItem('lastRememberMe');
        if (lastRememberMe === 'true') {
            document.getElementById('rememberMe').checked = true;
        }

        MessageManager.info('üëã –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
        MessageManager.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: ' + error.message);
    }
}

// ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤—Ö–æ–¥–∞
function validateLoginData(credentials) {
    const errors = [];

    if (!credentials.email) {
        errors.push('–í–≤–µ–¥–∏—Ç–µ email');
    } else if (!isValidEmail(credentials.email)) {
        errors.push('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
    }

    if (!credentials.password) {
        errors.push('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
    }

    if (errors.length > 0) {
        MessageManager.error('–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:<br>‚Ä¢ ' + errors.join('<br>‚Ä¢ '));
        return false;
    }

    return true;
}

// üìß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ email
function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

// üç™ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Remember Me (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function showRememberMeInfo() {
    const hasLocalStorageToken = !!localStorage.getItem('authToken');
    const hasSessionStorageToken = !!sessionStorage.getItem('authToken');

    console.log('üç™ Remember Me Status:');
    console.log('- localStorage token:', hasLocalStorageToken);
    console.log('- sessionStorage token:', hasSessionStorageToken);
    console.log('- Remember Me active:', apiClient.isRememberMeActive());
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.showRememberMeInfo = showRememberMeInfo;