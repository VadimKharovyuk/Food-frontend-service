package com.example.foodfrontendservice.Client;
import com.example.foodfrontendservice.Client.Fallback.UserServiceClientFallback;
import com.example.foodfrontendservice.config.FeignConfig;
import com.example.foodfrontendservice.dto.AuthResponseDto;
import com.example.foodfrontendservice.dto.LoginRequestDto;
import com.example.foodfrontendservice.dto.UserRegistrationDto;
import com.example.foodfrontendservice.dto.UserResponseDto;
import com.example.foodfrontendservice.enums.UserRole;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@FeignClient(
        name = "user-service",
        fallback = UserServiceClientFallback.class,
        configuration = FeignConfig.class
)
public interface UserServiceClient {

    // üìã –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏
    @GetMapping("/api/registration/roles")
    ResponseEntity<List<UserRole>> getAvailableRoles();

    // üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @PostMapping("/api/registration/register")
    ResponseEntity<UserResponseDto> register(@RequestBody UserRegistrationDto registrationDto);

    // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ email
    @GetMapping("/api/registration/check-email")
    ResponseEntity<Boolean> checkEmailAvailability(@RequestParam String email);

    // üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @PostMapping("/api/auth/login")
    ResponseEntity<AuthResponseDto> login(@RequestBody LoginRequestDto loginRequest);

    // üë§ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @GetMapping("/api/auth/me")
    ResponseEntity<UserResponseDto> getCurrentUser(@RequestHeader("Authorization") String authHeader);

    // ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
    @PostMapping("/api/auth/validate-token")
    ResponseEntity<Boolean> validateToken(@RequestHeader("Authorization") String authHeader);

    // üß™ –¢–µ—Å—Ç–æ–≤—ã–µ endpoints
    @GetMapping("/api/auth/test")
    ResponseEntity<String> testAuthService();

    @GetMapping("/api/registration/test")
    ResponseEntity<String> testRegistrationService();
}