package com.example.foodfrontendservice.Client.Fallback;

import com.example.foodfrontendservice.Client.CategoryServiceClient;
import com.example.foodfrontendservice.dto.PRODUCTSERVICE.category.*;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
@Slf4j
public class CategoryServiceClientFallback implements CategoryServiceClient {


    @Override
    public ResponseEntity<ListApiResponse<CategoryResponseDto>> getAllActiveCategories() {
        log.warn("Fallback: Category service unavailable for active categories");
        return ResponseEntity.ok(ListApiResponse.error("–°–µ—Ä–≤–∏—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ListApiResponse<CategoryResponseDto>> getAllCategories() {
        log.warn("Fallback: Category service unavailable for all categories");
        return ResponseEntity.ok(ListApiResponse.error("–°–µ—Ä–≤–∏—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ListApiResponse<CategoryResponseDto>> searchCategories(String name) {
        log.warn("Fallback: Category service unavailable for search: {}", name);
        return ResponseEntity.ok(ListApiResponse.error("–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    // ================================
    // üìä –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–û–í - –ö–†–ê–¢–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
    // ================================

    @Override
    public ResponseEntity<ListApiResponse<CategoryDto>> getActiveCategoriesBrief() {
        log.warn("Fallback: Category service unavailable for brief categories");
        return ResponseEntity.ok(ListApiResponse.error("–°–µ—Ä–≤–∏—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ListApiResponse<CategoryDto>> getAllCategoriesBrief() {
        log.warn("Fallback: Category service unavailable for all brief categories");
        return ResponseEntity.ok(ListApiResponse.error("–°–µ—Ä–≤–∏—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ListApiResponse<CategoryDto>> searchCategoriesBrief(String name) {
        log.warn("Fallback: Category service unavailable for brief search: {}", name);
        return ResponseEntity.ok(ListApiResponse.error("–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ListApiResponse<CategoryDto>> getCategoriesBriefByIds(List<Long> ids) {
        log.warn("Fallback: Category service unavailable for categories by IDs: {}", ids);
        return ResponseEntity.ok(ListApiResponse.error("–°–µ—Ä–≤–∏—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    // ================================
    // üîç –ü–û–õ–£–ß–ï–ù–ò–ï –û–¢–î–ï–õ–¨–ù–´–• –ö–ê–¢–ï–ì–û–†–ò–ô
    // ================================

    @Override
    public ResponseEntity<ApiResponse<CategoryResponseDto>> getCategoryById(Long id) {
        log.warn("Fallback: Category service unavailable for category ID: {}", id);
        return ResponseEntity.ok(ApiResponse.error("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"));
    }

    @Override
    public ResponseEntity<ApiResponse<CategoryDto>> getCategoryBrief(Long id) {
        log.warn("Fallback: Category service unavailable for brief category ID: {}", id);
        return ResponseEntity.ok(ApiResponse.error("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"));
    }

    // ================================
    // ‚úèÔ∏è –°–û–ó–î–ê–ù–ò–ï –ò –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ô
    // ================================

    @Override
    public ResponseEntity<ApiResponse<CategoryResponseDto>> createCategory(CreateCategoryDto createCategoryDto) {
        log.warn("Fallback: Category service unavailable for creating category: {}",
                createCategoryDto != null ? createCategoryDto.getName() : "unknown");
        return ResponseEntity.ok(ApiResponse.error("–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"));
    }

    @Override
    public ResponseEntity<ApiResponse<CategoryResponseDto>> updateCategory(Long id, CreateCategoryDto updateCategoryDto) {
        log.warn("Fallback: Category service unavailable for updating category ID: {}", id);
        return ResponseEntity.ok(ApiResponse.error("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"));
    }

    @Override
    public ResponseEntity<ApiResponse<Void>> deleteCategory(Long id) {
        log.warn("Fallback: Category service unavailable for deleting category: {}", id);
        return ResponseEntity.ok(ApiResponse.error("–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"));
    }

    @Override
    public ResponseEntity<ApiResponse<CategoryResponseDto>> toggleCategoryStatus(Long id) {
        log.warn("Fallback: Category service unavailable for toggling category status: {}", id);
        return ResponseEntity.ok(ApiResponse.error("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"));
    }



    // ================================
    // üõ†Ô∏è –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
    // ================================

    @Override
    public ResponseEntity<ApiResponse<Long>> getActiveCategoriesCount() {
        log.warn("Fallback: Category service unavailable for count");
        return ResponseEntity.ok(ApiResponse.error("–ü–æ–¥—Å—á–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
    }

    @Override
    public ResponseEntity<ApiResponse<Boolean>> checkCategoryExists(String name) {
        log.warn("Fallback: Category service unavailable for existence check: {}", name);
        return ResponseEntity.ok(ApiResponse.error("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"));
    }

    @Override
    public ResponseEntity<ApiResponse<String>> healthCheck() {
        log.warn("Fallback: Category service health check failed");
        return ResponseEntity.ok(ApiResponse.error("Category service is down"));
    }
}