package com.example.foodfrontendservice.Client.Fallback;

import com.example.foodfrontendservice.Client.ProductServiceClient;
import com.example.foodfrontendservice.dto.PRODUCTSERVICE.Product.ProductResponseWrapper;
import com.example.foodfrontendservice.dto.PRODUCTSERVICE.SingleProductResponseWrapper;
import feign.FeignException;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import java.time.LocalDateTime;
import java.util.Collections;

/**
 * ‚úÖ FallbackFactory –¥–ª—è ProductServiceClient
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏—á–∏–Ω–µ —Å–±–æ—è
 */
@Component
@Slf4j
public class ProductServiceClientFallbackFactory implements FallbackFactory<ProductServiceClient> {

    @Override
    public ProductServiceClient create(Throwable cause) {
        return new ProductServiceClient() {

            @Override
            public ResponseEntity<ProductResponseWrapper> getProductsByCategory(Long categoryId, int page, int size) {
                String errorMessage = getErrorMessage(cause, "–ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
                String userMessage = getUserFriendlyMessage(cause);

                log.error("üí• Fallback –¥–ª—è getProductsByCategory(categoryId: {}, page: {}, size: {}): {}",
                        categoryId, page, size, errorMessage, cause);

                ProductResponseWrapper fallbackResponse = ProductResponseWrapper.builder()
                        .products(Collections.emptyList())
                        .totalCount(0)
                        .hasNext(false)
                        .hasPrevious(false)
                        .currentPage(page)
                        .pageSize(size)
                        .success(false)
                        .message(userMessage)
                        .timestamp(LocalDateTime.now())
                        .build();

                return ResponseEntity.ok(fallbackResponse);
            }

            @Override
            public ResponseEntity<SingleProductResponseWrapper> createProduct(String productJson, MultipartFile imageFile, Long userId) {
                String errorMessage = getErrorMessage(cause, "—Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞");
                String userMessage = getUserFriendlyMessage(cause);

                log.error("üí• Fallback –¥–ª—è createProduct(userId: {}): {}", userId, errorMessage, cause);

                SingleProductResponseWrapper fallbackResponse = SingleProductResponseWrapper.builder()
                        .success(false)
                        .message(userMessage)
                        .timestamp(LocalDateTime.now())
                        .build();

                return ResponseEntity.ok(fallbackResponse);
            }

            @Override
            public ResponseEntity<SingleProductResponseWrapper> getProduct(Long id) {
                String errorMessage = getErrorMessage(cause, "–ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞");
                String userMessage = getUserFriendlyMessage(cause);

                log.error("üí• Fallback –¥–ª—è getProduct(id: {}): {}", id, errorMessage, cause);

                SingleProductResponseWrapper fallbackResponse = SingleProductResponseWrapper.builder()
                        .success(false)
                        .message(userMessage)
                        .timestamp(LocalDateTime.now())
                        .build();

                return ResponseEntity.ok(fallbackResponse);
            }

            @Override
            public ResponseEntity<Void> deleteProduct(Long productId, Long userId) {
                String errorMessage = getErrorMessage(cause, "—É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞");

                log.error("üí• Fallback –¥–ª—è deleteProduct(productId: {}, userId: {}): {}",
                        productId, userId, errorMessage, cause);

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π HTTP —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—à–∏–±–∫–∏
                if (cause instanceof FeignException.ServiceUnavailable) {
                    return ResponseEntity.status(503).build(); // Service Unavailable
                } else if (cause instanceof FeignException.InternalServerError) {
                    return ResponseEntity.status(500).build(); // Internal Server Error
                } else {
                    return ResponseEntity.status(502).build(); // Bad Gateway
                }
            }

            /**
             * ‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
             */
            private String getErrorMessage(Throwable cause, String operation) {
                if (cause instanceof FeignException) {
                    FeignException feignException = (FeignException) cause;
                    return String.format("–û—à–∏–±–∫–∞ %s: HTTP %d - %s",
                            operation, feignException.status(), feignException.getMessage());
                } else if (cause instanceof java.net.ConnectException) {
                    return String.format("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ %s: —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", operation);
                } else if (cause instanceof java.net.SocketTimeoutException) {
                    return String.format("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ %s: —Å–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç", operation);
                } else {
                    return String.format("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ %s: %s", operation, cause.getMessage());
                }
            }

            /**
             * ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
             */
            private String getUserFriendlyMessage(Throwable cause) {
                if (cause instanceof FeignException) {
                    FeignException feignException = (FeignException) cause;

                    switch (feignException.status()) {
                        case 404:
                            return "–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω";
                        case 500:
                            return "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ";
                        case 503:
                            return "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç";
                        case 400:
                            return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å";
                        case 401:
                            return "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è";
                        case 403:
                            return "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω";
                        default:
                            return "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω";
                    }
                } else if (cause instanceof java.net.ConnectException) {
                    return "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ";
                } else if (cause instanceof java.net.SocketTimeoutException) {
                    return "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ";
                } else {
                    return "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É";
                }
            }
        };
    }
}