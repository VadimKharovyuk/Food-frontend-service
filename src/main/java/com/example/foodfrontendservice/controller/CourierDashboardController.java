package com.example.foodfrontendservice.controller;


import com.example.foodfrontendservice.enums.UserRole;
import com.example.foodfrontendservice.service.DashboardService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.servlet.http.HttpServletRequest;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/dashboard/COURIER")
@RequiredArgsConstructor
@Slf4j
public class CourierDashboardController {

    private final DashboardService dashboardService;

    /**
     * üöö –î–∞—à–±–æ—Ä–¥ –∫—É—Ä—å–µ—Ä–∞
     */
    @GetMapping
    public String courierDashboard(HttpServletRequest request, Model model) {
        log.info("üöö –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ –∫—É—Ä—å–µ—Ä–∞");
        return dashboardService.loadRoleSpecificDashboard(request, model, UserRole.COURIER, "dashboard/courier");
    }

    /**
     * üì¶ AJAX endpoint –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫
     */
    @GetMapping("/active-deliveries")
    @ResponseBody
    public Map<String, Object> getActiveDeliveries(HttpServletRequest request) {
        log.info("üì¶ –ó–∞–ø—Ä–æ—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫ –∫—É—Ä—å–µ—Ä–∞");

        if (!dashboardService.hasRole(request, UserRole.COURIER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–æ–∫ —á–µ—Ä–µ–∑ DeliveryService
        return Map.of(
                "success", true,
                "deliveries", List.of(
                        Map.of("id", 1247, "restaurant", "–ü–∏—Ü—Ü–µ—Ä–∏—è –ú–∞–º–∞ –ú–∏–∞", "customer", "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", "status", "picked_up", "total", "890‚ÇΩ"),
                        Map.of("id", 1249, "restaurant", "Tokyo Sushi", "customer", "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "status", "waiting", "total", "1200‚ÇΩ")
                )
        );
    }

    /**
     * üìã AJAX endpoint –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
     */
    @GetMapping("/available-orders")
    @ResponseBody
    public Map<String, Object> getAvailableOrders(HttpServletRequest request) {
        log.info("üìã –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞");

        if (!dashboardService.hasRole(request, UserRole.COURIER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        return Map.of(
                "success", true,
                "orders", List.of(
                        Map.of("id", 1250, "restaurant", "Burger King", "distance", "1.2 –∫–º", "payment", "750‚ÇΩ + 120‚ÇΩ —á–∞–µ–≤—ã–µ"),
                        Map.of("id", 1251, "restaurant", "–ö–∞—Ñ–µ –£—é—Ç", "distance", "2.8 –∫–º", "payment", "1100‚ÇΩ + 150‚ÇΩ —á–∞–µ–≤—ã–µ")
                )
        );
    }

    /**
     * ‚úÖ AJAX endpoint –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞
     */
    @PostMapping("/accept-order")
    @ResponseBody
    public Map<String, Object> acceptOrder(HttpServletRequest request,
                                           @RequestBody Map<String, Object> orderData) {
        log.info("‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –∫—É—Ä—å–µ—Ä–æ–º: {}", orderData);

        if (!dashboardService.hasRole(request, UserRole.COURIER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ DeliveryService
        return Map.of(
                "success", true,
                "message", "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç"
        );
    }

    /**
     * üìä AJAX endpoint –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–∞
     */
    @GetMapping("/stats")
    @ResponseBody
    public Map<String, Object> getCourierStats(HttpServletRequest request) {
        log.info("üìä –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–∞");

        if (!dashboardService.hasRole(request, UserRole.COURIER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—å–µ—Ä–∞
        return Map.of(
                "success", true,
                "stats", Map.of(
                        "deliveriesToday", 12,
                        "earningsToday", "1840‚ÇΩ",
                        "rating", 4.9,
                        "averageRoute", "2.3 –∫–º"
                )
        );
    }
}

