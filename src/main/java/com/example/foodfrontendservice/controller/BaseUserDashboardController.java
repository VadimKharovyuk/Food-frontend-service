package com.example.foodfrontendservice.controller;
import com.example.foodfrontendservice.enums.UserRole;
import com.example.foodfrontendservice.service.DashboardService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.servlet.http.HttpServletRequest;

import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/dashboard/BASE_USER")
@Slf4j
public class BaseUserDashboardController extends BaseDashboardController {

    public BaseUserDashboardController(DashboardService dashboardService) {
        super(dashboardService);
    }

    /**
     * üõí –î–∞—à–±–æ—Ä–¥ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
     */
    @GetMapping
    public String baseUserDashboard(HttpServletRequest request, Model model) {
        log.info("üõí –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è");
        return dashboardService.loadRoleSpecificDashboard(request, model, UserRole.BASE_USER, "dashboard/user");
    }

    /**
     * üìã AJAX endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    @GetMapping("/orders")
    @ResponseBody
    public Map<String, Object> getUserOrders(HttpServletRequest request) {
        log.info("üìã –ó–∞–ø—Ä–æ—Å –∑–∞–∫–∞–∑–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è");

        if (!dashboardService.hasRole(request, UserRole.BASE_USER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ OrderService
        return Map.of(
                "success", true,
                "orders", List.of(
                        Map.of("id", 1, "restaurant", "–ü–∏—Ü—Ü–µ—Ä–∏—è –ú–∞–º–∞ –ú–∏–∞", "status", "–í –ø—É—Ç–∏", "total", "890‚ÇΩ"),
                        Map.of("id", 2, "restaurant", "Tokyo Sushi", "status", "–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", "total", "1200‚ÇΩ")
                )
        );
    }

    /**
     * ‚ù§Ô∏è AJAX endpoint –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
     */
    @GetMapping("/favorites")
    @ResponseBody
    public Map<String, Object> getFavoriteRestaurants(HttpServletRequest request) {
        log.info("‚ù§Ô∏è –ó–∞–ø—Ä–æ—Å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤");

        if (!dashboardService.hasRole(request, UserRole.BASE_USER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ RestaurantService
        return Map.of(
                "success", true,
                "favorites", List.of(
                        Map.of("id", 1, "name", "–ü–∏—Ü—Ü–µ—Ä–∏—è –ú–∞–º–∞ –ú–∏–∞", "rating", 4.9, "cuisine", "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è"),
                        Map.of("id", 2, "name", "Tokyo Sushi", "rating", 4.7, "cuisine", "–Ø–ø–æ–Ω—Å–∫–∞—è")
                )
        );
    }
}