package com.example.foodfrontendservice.controller;

import com.example.foodfrontendservice.enums.UserRole;
import com.example.foodfrontendservice.service.DashboardService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.servlet.http.HttpServletRequest;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/dashboard/BUSINESS_USER")
@RequiredArgsConstructor
@Slf4j
public class BusinessUserDashboardController {

    private final DashboardService dashboardService;

    /**
     * üè™ –î–∞—à–±–æ—Ä–¥ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–∏–∑–Ω–µ—Å–∞
     */
    @GetMapping
    public String businessUserDashboard(HttpServletRequest request, Model model) {
        log.info("üè™ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–∏–∑–Ω–µ—Å–∞");
        return dashboardService.loadRoleSpecificDashboard(request, model, UserRole.BUSINESS_USER, "dashboard/business");
    }

    /**
     * üì¶ AJAX endpoint –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
     */
    @GetMapping("/active-orders")
    @ResponseBody
    public Map<String, Object> getActiveOrders(HttpServletRequest request) {
        log.info("üì¶ –ó–∞–ø—Ä–æ—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞");

        if (!dashboardService.hasRole(request, UserRole.BUSINESS_USER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ OrderService
        return Map.of(
                "success", true,
                "orders", List.of(
                        Map.of("id", 1247, "items", "2x –ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞, 1x –ö–æ–∫–∞-–∫–æ–ª–∞", "status", "cooking", "total", "890‚ÇΩ", "time", "12 –º–∏–Ω –Ω–∞–∑–∞–¥"),
                        Map.of("id", 1248, "items", "1x –ë—É—Ä–≥–µ—Ä –î–µ–ª—é–∫—Å, 1x –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏", "status", "new", "total", "650‚ÇΩ", "time", "8 –º–∏–Ω –Ω–∞–∑–∞–¥")
                )
        );
    }

    /**
     * üìä AJAX endpoint –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
     */
    @GetMapping("/stats")
    @ResponseBody
    public Map<String, Object> getRestaurantStats(HttpServletRequest request) {
        log.info("üìä –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞");

        if (!dashboardService.hasRole(request, UserRole.BUSINESS_USER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        return Map.of(
                "success", true,
                "stats", Map.of(
                        "ordersToday", 47,
                        "revenueToday", "15240‚ÇΩ",
                        "rating", 4.7,
                        "averageTime", "23 –º–∏–Ω"
                )
        );
    }

    /**
     * ‚öôÔ∏è AJAX endpoint –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
     */
    @PostMapping("/settings")
    @ResponseBody
    public Map<String, Object> updateRestaurantSettings(HttpServletRequest request,
                                                        @RequestBody Map<String, Object> settings) {
        log.info("‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: {}", settings);

        if (!dashboardService.hasRole(request, UserRole.BUSINESS_USER)) {
            return Map.of("success", false, "message", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤");
        }

        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ RestaurantService
        return Map.of(
                "success", true,
                "message", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
        );
    }
}
