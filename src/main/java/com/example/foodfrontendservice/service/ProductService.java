package com.example.foodfrontendservice.service;

import com.example.foodfrontendservice.Client.ProductServiceClient;
import com.example.foodfrontendservice.dto.CreateProductDto;
import com.example.foodfrontendservice.dto.PRODUCTSERVICE.Product.ProductResponseWrapper;
import com.example.foodfrontendservice.dto.PRODUCTSERVICE.SingleProductResponseWrapper;
import lombok.Builder;
import lombok.Data;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.time.LocalDateTime;
import java.util.List;

@Service
@RequiredArgsConstructor
@Slf4j
public class ProductService {

    private final ProductServiceClient productServiceClient;

    /**
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public ProductResponseWrapper getProductsByCategory(Long categoryId, int page, int size) {
        log.info("üõí –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}: page={}, size={}", categoryId, page, size);

        try {
            ResponseEntity<ProductResponseWrapper> response =
                    productServiceClient.getProductsByCategory(categoryId, page, size);

            if (response.getBody() != null) {
                ProductResponseWrapper wrapper = response.getBody();

                log.info("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {} (page: {}, hasNext: {})",
                        wrapper.getProductCount(), categoryId, page, wrapper.getHasNext());

                return wrapper;
            } else {
                log.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç product-service –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}", categoryId);
                return createEmptyProductsResponse(page, size, "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}: {}", categoryId, e.getMessage(), e);
            return createEmptyProductsResponse(page, size, "–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤: " + e.getMessage());
        }
    }

    /**
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID
     */
    public SingleProductResponseWrapper getProductById(Long productId) {
        log.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ ID: {}", productId);

        try {
            ResponseEntity<SingleProductResponseWrapper> response =
                    productServiceClient.getProduct(productId);

            if (response.getBody() != null) {
                SingleProductResponseWrapper wrapper = response.getBody();

                if (wrapper.getSuccess()) {
                    log.info("‚úÖ –ü—Ä–æ–¥—É–∫—Ç {} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω", productId);
                } else {
                    log.warn("‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç {} –Ω–µ –Ω–∞–π–¥–µ–Ω: {}", productId, wrapper.getMessage());
                }

                return wrapper;
            } else {
                log.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç product-service –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ {}", productId);
                return createErrorProductResponse("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ {}: {}", productId, e.getMessage(), e);
            return createErrorProductResponse("–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤: " + e.getMessage());
        }
    }

    /**
     * ‚úÖ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
     */
    public SingleProductResponseWrapper createProduct(String productJson, MultipartFile imageFile, Long userId) {
        log.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if (productJson == null || productJson.trim().isEmpty()) {
                log.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∞: productJson –ø—É—Å—Ç–æ–π");
                return createErrorProductResponse("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∞");
            }

            if (imageFile == null || imageFile.isEmpty()) {
                log.error("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ");
                return createErrorProductResponse("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ");
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞–∫—Å–∏–º—É–º 5MB)
            long maxFileSize = 5 * 1024 * 1024; // 5MB
            if (imageFile.getSize() > maxFileSize) {
                log.error("‚ùå –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç: {} bytes", imageFile.getSize());
                return createErrorProductResponse("–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB");
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            String contentType = imageFile.getContentType();
            if (contentType == null || !contentType.startsWith("image/")) {
                log.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {}", contentType);
                return createErrorProductResponse("–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º");
            }

            ResponseEntity<SingleProductResponseWrapper> response =
                    productServiceClient.createProduct(productJson, imageFile, userId);

            if (response.getBody() != null) {
                SingleProductResponseWrapper wrapper = response.getBody();

                if (wrapper.getSuccess()) {
                    log.info("‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", userId);
                } else {
                    log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}", userId, wrapper.getMessage());
                }

                return wrapper;
            } else {
                log.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç product-service –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞");
                return createErrorProductResponse("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}", userId, e.getMessage(), e);
            return createErrorProductResponse("–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤: " + e.getMessage());
        }
    }

    /**
     * ‚úÖ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
     */
    public boolean deleteProduct(Long productId, Long userId) {
        log.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", productId, userId);

        try {
            ResponseEntity<Void> response = productServiceClient.deleteProduct(productId, userId);

            if (response.getStatusCode().is2xxSuccessful()) {
                log.info("‚úÖ –ü—Ä–æ–¥—É–∫—Ç {} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}", productId, userId);
                return true;
            } else {
                log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ {}: HTTP {}", productId, response.getStatusCode());
                return false;
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {}: {}", productId, userId, e.getMessage(), e);
            return false;
        }
    }


    /**
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public int getProductCountByCategory(Long categoryId) {
        log.debug("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}", categoryId);

        try {
            ProductResponseWrapper response = getProductsByCategory(categoryId, 0, 1);

            if (response.getSuccess()) {
                int count = response.getTotalCount() != null ? response.getTotalCount() : 0;
                log.debug("üìä –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {} –Ω–∞–π–¥–µ–Ω–æ {} –ø—Ä–æ–¥—É–∫—Ç–æ–≤", categoryId, count);
                return count;
            } else {
                log.debug("üìä –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}", categoryId);
                return 0;
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}: {}", categoryId, e.getMessage());
            return 0;
        }
    }

    // ‚úÖ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
     */
    private ProductResponseWrapper createEmptyProductsResponse(int page, int size, String message) {
        return ProductResponseWrapper.builder()
                .products(List.of())
                .totalCount(0)
                .success(false)
                .message(message)
                .hasNext(false)
                .hasPrevious(false)
                .currentPage(page)
                .pageSize(size)
                .timestamp(LocalDateTime.now())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
     */
    private SingleProductResponseWrapper createErrorProductResponse(String message) {
        return SingleProductResponseWrapper.builder()
                .success(false)
                .message(message)
                .timestamp(LocalDateTime.now())
                .build();
    }

    /**
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥)
     */
    public ProductStatistics getProductStatistics(Long categoryId) {
        log.debug("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}", categoryId);

        try {
            ProductResponseWrapper response = getProductsByCategory(categoryId, 0, Integer.MAX_VALUE);

            if (response.getSuccess() && response.hasProducts()) {
                return ProductStatistics.builder()
                        .totalProducts(response.getTotalCount())
                        .availableProducts((int) response.getProducts().stream()
                                .filter(p -> p.getIsAvailable() != null && p.getIsAvailable())
                                .count())
                        .productsWithDiscount((int) response.getProducts().stream()
                                .filter(p -> p.getHasDiscount() != null && p.getHasDiscount())
                                .count())
                        .popularProducts((int) response.getProducts().stream()
                                .filter(p -> p.getIsPopular() != null && p.getIsPopular())
                                .count())
                        .categoryId(categoryId)
                        .build();
            } else {
                return ProductStatistics.builder()
                        .totalProducts(0)
                        .availableProducts(0)
                        .productsWithDiscount(0)
                        .popularProducts(0)
                        .categoryId(categoryId)
                        .build();
            }

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}: {}", categoryId, e.getMessage());
            return ProductStatistics.builder()
                    .totalProducts(0)
                    .availableProducts(0)
                    .productsWithDiscount(0)
                    .popularProducts(0)
                    .categoryId(categoryId)
                    .build();
        }
    }

    // ‚úÖ –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    @Data
    @Builder
    public static class ProductStatistics {
        private Long categoryId;
        private Integer totalProducts;
        private Integer availableProducts;
        private Integer productsWithDiscount;
        private Integer popularProducts;
    }
}